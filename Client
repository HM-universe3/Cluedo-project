import pygame
import sys

pygame.init()

width = 500
height = 500
WIN = pygame.display.set_mode((width, height))
pygame.display.set_caption("Client")

clientNumber = 0

class Player():
  def __init__(self, x, y, width, height, colour, name):
    self.x = x
    self.y = y
    self.width = width
    self.height = height
    self.colour = colour
    self.rect = (self.x,self.y,self.width,self.height)
    self.velocity = 0.5
    self.name = name
    self.inventory = []
  def draw(self, WIN):
    pygame.draw.rect(WIN, self.colour, self.rect)

  def move(self):
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] or keys[pygame.K_a]:
      self.x -= self.velocity
    
    if keys[pygame.K_RIGHT] or keys[pygame.K_d]:
      self.x += self.velocity
    
    if keys[pygame.K_UP] or keys[pygame.K_w]:
      self.y -= self.velocity
    
    if keys[pygame.K_DOWN] or keys[pygame.K_s]:
      self.y += self.velocity

    self.rect = (self.x,self.y,self.width,self.height)

  def pickUpItem(self, item):
    self.inventory.append(item)
    print(f"{self.name} picked up {item.name}")


  def viewInventory(self):
    if self.inventory:
      print(f"{self.name}'s Inventory")
      for item in self.inventory:
        print(item.name) #only prints the name, need to figure ou how to also display the card

    else:
      print(f"{self.name}'s inventory is empty")

class Card:
  def __init__(self, cardName, cardImage):
    self.name = cardName
    self.imagePath = str(cardImage).jpg
    self.image = pygame.image.load(self.imagePath)
    #inventoryOpen = False
    #while inventoryOpen != False:
    #WIN.blit(self.image, (0, 0))
    #pygame.display.flip()




def redrawWindow(WIN, player):
  WIN.fill((255, 255, 255))
  player.draw(WIN)
  pygame.display.update()



def main():
  background = pygame.image.load("Cluedo_map.png")
  background = pygame.transform.scale(background, (width * 2, height * 2))
  run = True
  p = Player(50, 50, 100, 100, (0, 255, 0), "Player 1")
  while run:
    for event in pygame.event.get():
      if event.type == pygame.QUIT:
        run = False
        pygame.quit()
    p.move()
    redrawWindow(WIN, p)


    backGroundOffset_x = -p.x + width // 2
    backGroundOffset_y = -p.y + height // 2

    WIN.blit(background, (backGroundOffset_x, backGroundOffset_y))

    pygame.display.update()
    pygame.time.Clock().tick(30)
main()

pygame.quit()
sys.exit()